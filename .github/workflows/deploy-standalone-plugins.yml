name: Deploy standalone plugins to WordPress.org

on:
  # TODO The pull_request will be removed once the workflow is tested.
  pull_request:
    branches:
      - trunk
      - 'release/**'
      - 'feature/**'
    paths:
      - '.github/workflows/deploy-standalone-plugins.yml'
    types:
      - opened
      - reopened
      - synchronize
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      slug:
        type: choice
        default: 'webp-uploads'
        options:
        - audit-autoloaded-options
        - audit-enqueued-assets
        - dominant-color-images
        - fetchpriority
        - sqlite
        - webp-support
        - webp-uploads
        description: 'Select a slug of the plugin to deploy'

jobs:
  release:
    name: Prepare Deployment
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Get plugin version
        id: get-version
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "version=$(node ./bin/plugin/cli.js get-plugin-version --slug=${{ inputs.slug }})" >> $GITHUB_OUTPUT
      - name: Set matrix
        id: set-matrix
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }}; then
            result=$(echo ${{ steps.get-version.outputs.version }} | grep -E '^\*|\d+(\.\d+){0,2}(-[a-zA-Z0-9\.]+)?$')
            if [[ -n "$result" ]]; then
              echo "YESSS"
            else
              echo "Nooo"
            fi
            echo "Manual"
            echo ${{ steps.get-version.outputs.version }}
            if [[ "${{ steps.get-version.outputs.version }}" =~ ^(\*|\d+(\.\d+){0,2}(-[a-zA-Z0-9\.]+)?)$ ]]; then
              echo "The ${{ inputs.slug }} module slug is in the file plugins.json."
              exit 1
            else
              echo "The ${{ inputs.slug }} module slug is missing in the file plugins.json."
              exit 1
            fi
            echo "${{ steps.get-version.outputs.version }}"
            if ${{ steps.get-version.outputs.version == '' }}; then
              echo "The ${{ inputs.slug }} module slug is missing in the file plugins.json."
              exit 1
            else
              # Set the manual input values in JSON format for use in the matrix.
              echo "matrix={\"include\":[{\"slug\":\"${{ inputs.slug }}\",\"version\":\"${{ steps.get-version.outputs.version }}\"}]}" >> $GITHUB_OUTPUT
            fi
          else
            echo "Auto"
            # Load the JSON file and parse from "{name: {slug, version}, ...}" to "include: [{ name, slug, version }, ...]"
            # for use in the matrix.
            echo "matrix="$(jq -c '{include:[keys[] as $k | {name:$k,slug:.[$k].slug,version:.[$k].version }]}' plugins.json) >> $GITHUB_OUTPUT
          fi
  deploy:
    name: Deploy Plugin
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.release.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Building standalone plugins
        run: npm run build-plugins
      - name: Deploy Standalone Plugin - ${{ matrix.slug }}
        uses: 10up/action-wordpress-plugin-deploy@stable
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SLUG: ${{ matrix.slug }}
          VERSION: ${{ matrix.version }}
          BUILD_DIR: ./build/${{ matrix.slug }}
          ASSETS_DIR: ./build/${{ matrix.slug }}/.wordpress-org
