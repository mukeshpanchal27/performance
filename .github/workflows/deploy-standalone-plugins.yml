name: Deploy standalone plugins to WordPress.org

on:
  # TODO The pull_request will be removed once the workflow is tested.
  pull_request:
    branches:
      - trunk
      - 'release/**'
      - 'feature/**'
    paths:
      - '.github/workflows/deploy-standalone-plugins.yml'
    types:
      - opened
      - reopened
      - synchronize
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      slug:
        type: choice
        options:
        - audit-autoloaded-options
        - audit-enqueued-assets
        - dominant-color-images
        - fetchpriority
        - sqlite
        - webp-support
        - webp-uploads
        description: 'The slug of the plugin to deploy'

jobs:
  release:
    name: Prepare Deployment
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install npm dependencies
        run: npm ci
      - name: Set matrix
        id: set-matrix
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require( 'fs' );
            const path = require( 'path' );

            let pluginsFileVersion = '';
            const pluginsFile = path.join( '.', 'plugins.json' );
            fs.readFile( pluginsFile, 'utf8', ( err, jsonString ) => {
              if ( err ) {
                console.log( `Error reading file from disk: "${ err }"` );
                process.exit( 1 );
              }

              try {
                const plugins = JSON.parse( jsonString );
                for ( const moduleDir in plugins ) {
                  const pluginVersion = plugins[ moduleDir ]?.version;
                  const pluginSlug = plugins[ moduleDir ]?.slug;

                  if ( ! pluginVersion || ! pluginSlug ) {
                    console.log(
                        'The given module configuration is invalid, the module JSON object is missing the "version" and/or "slug" properties, or they are misspelled.'
                    );
                    process.exit( 1 );
                  }
                  if ( ${{ github.event_name == 'workflow_dispatch' }} ) {
                    console.log( ${{ inputs.slug }} );
                    pluginsFileVersion = pluginVersion;
                  }
                  console.log( pluginsFileVersion );
                  console.log( pluginVersion );
                  console.log( pluginSlug );
                }
                console.log( echo "matrix="$(jq -c '{include:[keys[] as $k | {name:$k,slug:.[$k].slug,version:.[$k].version }]}' plugins.json) )
              } catch ( jsonError ) {
                console.log( `Error parsing JSON string: "${ jsonError }"` );
              }
            });

  deploy:
    name: Deploy Plugin
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.release.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Building standalone plugins
        run: npm run build-plugins
      - name: Deploy Standalone Plugin - ${{ matrix.slug }}
        uses: 10up/action-wordpress-plugin-deploy@stable
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          SLUG: ${{ matrix.slug }}
          VERSION: ${{ matrix.version }}
          BUILD_DIR: ./build/${{ matrix.slug }}
          ASSETS_DIR: ./build/${{ matrix.slug }}/.wordpress-org
