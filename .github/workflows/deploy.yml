name: Deploy to WordPress.org

on:
  push:
    branches:
      - trunk
      - 'release/**'
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/deploy.yml'
      - '**.php'
      - '.wp-env.json'
      - '**/package.json'
      - 'package-lock.json'
      - 'phpunit.xml.dist'
      - 'tests/multisite.xml'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    branches:
      - trunk
      - 'release/**'
      - 'feature/**'
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/deploy.yml'
      - '**.php'
      - '.wp-env.json'
      - '**/package.json'
      - 'package-lock.json'
      - 'phpunit.xml.dist'
      - 'tests/multisite.xml'
      - 'composer.json'
      - 'composer.lock'
    types:
      - opened
      - reopened
      - synchronize

#jobs:
#  release:
#    name: New Release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: styfle/cancel-workflow-action@0.9.1
#      - uses: actions/checkout@v3
#      - name: Setup Node.js (.nvmrc)
#        uses: actions/setup-node@v3
#        with:
#          node-version-file: '.nvmrc'
#          cache: npm
#      - name: npm install
#        run: npm ci
#      - name: Building standalone plugins
#        id: build-plugins
#        run: npm run build-plugins
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
      - uses: actions/checkout@v3
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
      - id: set-matrix
        run: |
          content=`cat ./plugins.json`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
          echo "${{fromJson(steps.set-matrix.outputs.packageJson)}}"
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
    steps:
      - run: build
